name: CI â†’ ECR

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/services/**'

env:
  AWS_REGION:   ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [products, sales, sellers]

    defaults:
      run:
        working-directory: backend/services/${{ matrix.service }}

    steps:
      - uses: actions/checkout@v3

      - name: Detect changes
        id: changed
        run: |
          if git diff --name-only origin/main...HEAD \
             | grep -q "^backend/services/${{ matrix.service }}/"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip if no changes
        if: steps.changed.outputs.changed == 'false'
        run: echo "No changes in ${{ matrix.service }}"

      - name: Configure AWS credentials
        if: steps.changed.outputs.changed == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Log in to ECR
        if: steps.changed.outputs.changed == 'true'
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag & push Docker image
        if: steps.changed.outputs.changed == 'true'
        run: |
          ECR_PREFIX=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          IMAGE_SHA=$ECR_PREFIX/${{ matrix.service }}:${GITHUB_SHA}
          IMAGE_LATEST=$ECR_PREFIX/${{ matrix.service }}:latest

          docker build -t $IMAGE_SHA .
          docker push $IMAGE_SHA

          docker tag $IMAGE_SHA $IMAGE_LATEST
          docker push $IMAGE_LATEST

      - name: Set output image URIs
        if: steps.changed.outputs.changed == 'true'
        id: image
        run: |
          ECR_PREFIX=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          echo "::set-output name=sha_image::${ECR_PREFIX}/${{ matrix.service }}:${GITHUB_SHA}"
          echo "::set-output name=latest_image::${ECR_PREFIX}/${{ matrix.service }}:latest"
